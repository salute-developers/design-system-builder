version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ds-builder-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: ds_builder
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    networks:
      - ds-builder-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ds_builder"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API (Development)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: ds-builder-backend-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ds_builder
      DB_USER: postgres
      DB_PASSWORD: postgres
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/ds_builder
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ds-builder-network
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run dev

  # Frontend Application (Development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: ds-builder-frontend-dev
    restart: unless-stopped
    environment:
      - VITE_API_URL=http://localhost:3001
    ports:
      - "3000:5173"
    depends_on:
      - backend
    networks:
      - ds-builder-network
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev -- --host 0.0.0.0

volumes:
  postgres_data_dev:
    driver: local

networks:
  ds-builder-network:
    driver: bridge 