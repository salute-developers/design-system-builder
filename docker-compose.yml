version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: ./services/db-service
      dockerfile: Dockerfile
    container_name: ds-builder-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      # PORT: 3001
      DATABASE_URL: ${DATABASE_URL:-postgres://postgres:postgres@localhost:5432/ds_builder}
    # ports:
    #   - "3001:3001"
    networks:
      - ds-builder-network

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_BASE_URL: ${VITE_API_BASE_URL:-http://backend:3001}
    container_name: ds-builder-frontend
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - ds-builder-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Client Application
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        VITE_PROXY_SERVER_URL: ${VITE_PROXY_SERVER_URL:-http://client-proxy:3003}
    container_name: ds-builder-client
    restart: unless-stopped
    depends_on:
      - backend
      - client-proxy
    networks:
      - ds-builder-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Client Proxy Service
  client-proxy:
    build:
      context: ./services/client-proxy
      dockerfile: Dockerfile
    container_name: ds-builder-client-proxy
    restart: unless-stopped
    environment:
      NODE_ENV: production
      BACKEND_URL: http://backend:3001/api
    depends_on:
      - backend
    networks:
      - ds-builder-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3003/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  ds-builder-network:
    driver: bridge 